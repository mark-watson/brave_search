;; Copyright Mark Watson 2024. All Rights Reserved.  https://markwatson.com
;; Apache 2 license.

(in-package #:brave_search)


(defun websearch (query)
  (let* ((key (uiop:getenv "BRAVE_SEARCH_API_KEY"))
         (command
           (concatenate
            'string
            "curl -v -X GET \""  "https://api.search.brave.com/res/v1/web/search" "?q="
            (drakma:url-encode query :utf-8)
            " -H \"X-Subscription-Token: " key "\""
            " -H \"Content-Type: application/json\""))
	 (ignore (princ command))
         (response
           (uiop:run-program command :output :string)))
    (print response) ;; weird: comment this out, and a runtime error is thrown
    (with-input-from-string
        (s response)
      (let* ((json-as-list (json:decode-json s))
             (values (cdadr (cddr (nth 2 json-as-list)))))
        (pprint json-as-list)  ; uncomment this to see how following expression works:
        (mapcar #'(lambda (x)
                    (let ((name (assoc :name x))
                          (display-uri (assoc :display-url x))
                          (snippet (assoc :snippet x)))
                      (list (cdr name) (cdr display-uri) (cdr snippet))))
                values)))))
